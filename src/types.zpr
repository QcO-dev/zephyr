import "src/ast.zpr";

var INT_TYPE: Type*;
var I8_TYPE: Type*;
var STR_TYPE: Type*;
var VOID_TYPE: Type*;
var ANY_TYPE: Type*;

function new_type(): Type* {
	var type: Type* = malloc(sizeof(Type));

	return type;
}

function copy_type(a: Type*): Type* {
	var new: Type* = malloc(sizeof(Type));
	new.type = a.type;
	new.indirection = a.indirection;
	new.name = a.name;
	new.fields = a.fields;
	new.methods = a.methods;
	return new;
}

function build_types() {
	INT_TYPE = new_type();
	INT_TYPE.type = DataType::INT;

	I8_TYPE = new_type();
	I8_TYPE.type = DataType::I8;

	STR_TYPE = new_type();
	STR_TYPE.type = DataType::I8;
	STR_TYPE.indirection = 1;

	VOID_TYPE = new_type();
	VOID_TYPE.type = DataType::VOID;

	ANY_TYPE = new_type();
	ANY_TYPE.type = DataType::ANY;
}